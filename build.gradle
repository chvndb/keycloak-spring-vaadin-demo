buildscript {
  ext.javaVersion = 1.8
  ext.appVersion = "0.1.0-SNAPSHOT"
  ext.dependencyManagementVersion = "1.0.2.RELEASE"
  ext.springBootVersion = "1.5.3.RELEASE"
  ext.keycloakVersion = "3.0.0.Final"

  ext.exec = { cmd ->
    cmd.execute().text.trim()
  }

  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
  }
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "org.springframework.boot"

sourceCompatibility = javaVersion
targetCompatibility = javaVersion
version = appVersion

repositories {
  mavenCentral()
}

dependencies {
  compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
  compile "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"

  compile "org.keycloak:keycloak-spring-security-adapter:${keycloakVersion}"
  compile "org.keycloak:keycloak-spring-boot-adapter:${keycloakVersion}"
  compile "org.keycloak:keycloak-tomcat8-adapter:${keycloakVersion}"

  runtime "org.springframework.boot:spring-boot-devtools:${springBootVersion}"

  testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

bootRun {
  addResources = true
}

task redeploy {}
redeploy.dependsOn bootRun

task stop {
  doLast { exec("docker-compose -f src/main/docker/application.yml down") }
}

task start(dependsOn: stop) {
  doFirst { exec("docker network add demo") }
  doLast { exec("docker-compose -f src/main/docker/application.yml up -d") }
  finalizedBy redeploy
}
